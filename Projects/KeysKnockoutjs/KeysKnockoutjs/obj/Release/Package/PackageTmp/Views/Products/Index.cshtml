@{
    ViewBag.Title = "Index";
}
<style>
    .validationMessage {
        color: #4a0873;
    }
</style>


<h2><button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#productmodal" data-bind="click: createProduct">Create New Product</button></h2>
<input type="hidden" id="hiddenId" data-bind="value: id" />

<div id="productmodal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button"  class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="title"></h4>
            </div>
            <div class="modal-body">
                <form id="frm-product">
                    <p>
                        <div class="form-group">
                            <label class="control-label" for="Name">Name:</label>
                            <input type="text" class="form-control" id="Name" name="Name" data-bind="value: name" placeholder="Enter Name" >
                            <span class="help-block"></span>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="Price">Price:</label>
                            <input type="text" class="form-control" id="Price" name="Price" data-bind="value: price" placeholder="Enter Price" >
                            <span class="help-block"></span>
                        </div>

                    </p>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnSave" data-bind="click: addProduct">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<table id="datatable" class="table table-striped table-bordered" style="width:100%;margin-left:12px">

    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Edit</th>
            <th>Delete</th>

        </tr>
    </thead>
    <tbody data-bind="foreach: products">
        <tr>
            <td data-bind="text: Id"></td>
            <td data-bind="text: Name"></td>
            <td data-bind="text: Price"></td>
            <td><button class="btn btn-warning" data-toggle="modal" data-target="#productmodal" data-bind="click: $root.editProduct">Edit</button></td>
            <td><button class="btn btn-danger" data-bind="click: $root.deleteProduct">Delete</button></td>
            @*<td><button>Edit</button></td>
                <td><button>Delete</button></td>*@
        </tr>
    </tbody>
</table>


@section scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
           
                

            var ViewModel = function () {
                var self = this;
                this.id = ko.observable();
                this.name = ko.observable().extend({ required: { message: 'Please enter name.' } });
                this.price = ko.observable().extend({ required: { message: 'Please enter price.' } });
                this.errors = ko.validation.group(this);
                this.products = ko.observableArray([]);
                getProducts(self.products);
                this.addProduct = function () {
                    //$('#title').text('Add');
                    if (self.errors().length === 0) {
                        // if no validation errors then add/update
                        addProduct(self.name(), self.price(), self);
                        $('#productmodal').modal('hide');

                    }
                    
                };
                this.editProduct = function (p) {
                    $('#title').text('Edit');
                    self.id(p.Id);
                    self.name(p.Name);
                    self.price(p.Price);
                    //addProduct(self.name(), self.price());
                };
                this.createProduct = function () {
                    
                    $('#title').text('Enter New Product');
                    self.id('');
                    self.name('');
                    self.price('');
                };
                this.deleteProduct = function (p) {
                    if(confirm('Are you sure you want to delete?'))
                        deleteProduct(p.Id, self);
                };

                

            };

            //ViewModel.errors = ko.validation.group(ViewModel);
            ko.applyBindings(new ViewModel());

            function getProducts(products) {
                $.getJSON("/api/products", function (data) {
                    products(data);

                });
            }

            // same for add/edit
            function addProduct(name, price, vm) {

                if ($('#title').text() === "Edit") {

                    $.ajax({
                        type: "put",
                        url: "/api/products/" + $('#hiddenId').val(),
                        data: {
                            "Name": name,
                            "Price": price
                        },
                        dataType: "JSON",
                        success: function () {
                            //location.reload();
                            getProducts(vm.products);

                        }

                    });
                } else {
                    $.ajax({
                        type: "post",
                        url: "/api/products/",
                        data: {
                            "Name": name,
                            "Price": price
                        },
                        dataType: "JSON",
                        success: function () {
                            //location.reload();
                            getProducts(vm.products);

                        }

                    });
                }
            }

            function deleteProduct(id, vm) {
                $.ajax({
                    type: 'delete',
                    url: "/api/products/" + id,
                    success: function () {
                        //location.reload();
                        getProducts(vm.products);
                    },
                    error: function () {
                        alert('error');
                    }
                });
            }


        });




    </script>
}
